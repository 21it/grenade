{-# LANGUAGE TemplateHaskell       #-}
{-# LANGUAGE DataKinds             #-}
{-# LANGUAGE FlexibleContexts      #-}
{-# LANGUAGE FlexibleInstances     #-}
{-# LANGUAGE GADTs                 #-}
{-# LANGUAGE MultiParamTypeClasses #-}
{-# LANGUAGE RankNTypes            #-}
{-# LANGUAGE ScopedTypeVariables   #-}
{-# LANGUAGE TypeFamilies          #-}
{-# LANGUAGE TypeOperators         #-}
{-# LANGUAGE UndecidableInstances  #-}
{-# LANGUAGE OverloadedLabels      #-}
{-# LANGUAGE OverloadedStrings     #-}

module Test.Grenade.Layers.BiasConvolution where

import           Grenade.Core
import           Grenade.Layers.BiasConvolution
import           Grenade.Utils.ListStore        (mkListStore)
import           Hedgehog
import qualified Numeric.LinearAlgebra.Static   as H
import           Test.Hedgehog.Hmatrix

prop_no_bias_convolution_same_as_torch :: Property
prop_no_bias_convolution_same_as_torch = withTests 1 $ property $ assert $ allClose output refOutput
  where
    refOutput = S3D . H.fromList . concat . concat $ outputList :: S ('D3 4 4 3)
    output    = snd $ runForwards layer input :: S ('D3 4 4 3)

    layer   = NoBiasConvolution filters mkListStore :: BiasConvolution 'False 1 3 4 4 2 2
    filters = H.tr . H.fromList . concat . concat $ filtersList
    input   = S2D . H.fromList . concat $ inputList :: S ('D2 10 10)

    inputList :: [[Double]]
    inputList =
         [[ 0.805695116519927979,  1.519197344779968262, -0.655280172824859619,
            0.558940589427947998, -1.735967755317687988,  0.535881459712982178,
           -1.065685033798217773, -1.126668691635131836, -0.510172247886657715,
           -0.179458290338516235
          ]
         ,[-0.683313846588134766, -0.105371132493019104,  1.736434578895568848,
           -2.160640478134155273,  0.553544700145721436, -0.170647710561752319,
           -0.007722060196101665,  1.800285100936889648,  0.800118863582611084,
           -0.602147877216339111
          ]
         ,[-0.959093689918518066,  0.829846978187561035,  0.608853876590728760,
           -0.588487029075622559,  0.263469547033309937, -0.012816454283893108,
           -1.290606975555419922, -0.343165606260299683,  0.004300233442336321,
           -0.669222474098205566
          ]
         ,[-0.952372372150421143,  1.121449947357177734,  1.168827533721923828,
           -1.288671135902404785,  0.496572971343994141,  0.744785726070404053,
            0.292277157306671143,  0.521429359912872314,  0.409139424562454224,
           -0.803194820880889893
          ]
         ,[ 0.100240223109722137, -1.563166260719299316, -0.770799458026885986,
            2.509004592895507812, -1.712125301361083984,  0.229590550065040588,
           -0.408658325672149658, -0.672039568424224854, -0.075853079557418823,
            0.889858841896057129
          ]
         ,[ 1.379408121109008789, -1.012258648872375488,  1.713099479675292969,
            0.079582661390304565, -1.538381934165954590, -0.672801792621612549,
            0.006232541520148516,  0.400794118642807007,  0.354484230279922485,
           -0.783896684646606445
          ]
         ,[ 0.957117080688476562, -0.883588731288909912, -0.597791254520416260,
           -0.958269596099853516, -0.258106052875518799, -0.188000783324241638,
            0.561556637287139893,  0.694007694721221924,  0.234809562563896179,
            1.021510362625122070
          ]
         ,[ 1.599161744117736816,  0.496596306562423706, -0.178959295153617859,
            0.917961061000823975, -0.103101097047328949,  0.412288665771484375,
            0.662620127201080322, -0.921072959899902344,  1.261424183845520020,
            0.301970511674880981
          ]
         ,[ 2.578808546066284180,  1.394178748130798340,  0.314523518085479736,
            1.850871920585632324,  2.609176874160766602,  0.269876748323440552,
           -1.241038203239440918, -1.579095959663391113,  0.331671237945556641,
            0.022144606336951256
          ]
        ,[ 1.157767534255981445,  1.430096030235290527, -0.829305052757263184,
           -0.734360873699188232, -0.354102343320846558, -1.352532386779785156,
            1.398365736007690430, -1.030892014503479004,  1.747885942459106445,
            0.553308367729187012
         ]
        ]

    filtersList :: [[[Double]]]
    filtersList = [[[ 0.232717186212539673,  0.101419657468795776, -0.201826840639114380, -0.076407134532928467]
                   ,[-0.052190184593200684, -0.067268043756484985,  0.019739121198654175,  0.224824249744415283]
                   ,[ 0.167190730571746826,  0.054005831480026245, -0.082309246063232422, -0.106185048818588257]
                   ,[ 0.229148924350738525, -0.051938921213150024, -0.097605794668197632, -0.038504868745803833]
                   ]
                  ,[[ 0.161841273307800293,  0.230423003435134888,  0.033745050430297852, -0.028134405612945557]
                   ,[ 0.164121806621551514, -0.004879921674728394, -0.179027557373046875, -0.081320494413375854]
                   ,[ 0.071921646595001221,  0.110148012638092041,  0.141562908887863159,  0.189767122268676758]
                   ,[ 0.131953060626983643,  0.238061010837554932, -0.203175365924835205, -0.073123127222061157]
                   ]
                  ,[[-0.196261763572692871, -0.171274423599243164, -0.004690051078796387, -0.019246578216552734]
                   ,[ 0.225035816431045532,  0.004893422126770020, -0.177564382553100586, -0.223103910684585571]
                   ,[-0.151285767555236816, -0.015318244695663452, -0.216265976428985596, -0.096653699874877930]
                   ,[-0.148824155330657959, -0.039375364780426025, -0.119762927293777466, -0.006196528673171997]
                   ]
                  ]
    
    outputList :: [[[Double]]]
    outputList = [[[-0.421723574399948120,  0.548199713230133057,  0.551239371299743652, -0.618591606616973877]
                  ,[-0.581582307815551758,  0.920401155948638916, -0.108773931860923767, -0.724384605884552002]
                  ,[ 0.462497115135192871, -0.078282214701175690, -0.273021101951599121, -0.343969941139221191]
                  ,[ 0.997243583202362061, -0.287722408771514893,  0.151093080639839172,  0.055441591888666153]
                  ]
                 ,[[ 0.190818831324577332, -0.134677648544311523, -0.300040870904922485, -0.667283356189727783]
                  ,[-0.403938591480255127,  0.649713158607482910, -0.688041925430297852, -0.095232792198657990]
                  ,[-0.518890261650085449,  0.964999973773956299, -0.312786638736724854, -0.315522104501724243]
                  ,[ 1.625725030899047852,  0.163766115903854370, -0.983730256557464600, -0.575679123401641846]
                  ]
                 ,[[-0.383406370878219604,  0.024540422484278679,  0.130213215947151184, 0.563518106937408447]
                  ,[-0.512409031391143799,  0.339279890060424805,  0.571351766586303711, 0.448013454675674438]
                  ,[ 0.035740625113248825,  0.713714182376861572, -0.349592268466949463, -0.166543245315551758]
                  ,[-0.609139025211334229, -0.286346971988677979,  0.100543841719627380, -0.638796985149383545]
                  ]
                 ]

prop_bias_convolution_same_as_torch :: Property
prop_bias_convolution_same_as_torch = withTests 1 $ property $ assert $ allClose output refOutput
  where
    refOutput = S3D . H.fromList . concat . concat $ outputList :: S ('D3 4 4 3)
    output    = snd $ runForwards layer input :: S ('D3 4 4 3)

    layer   = BiasConvolution filters bias mkListStore :: BiasConvolution 'True 1 3 4 4 2 2
    filters = H.tr . H.fromList . concat . concat $ filtersList
    bias    = H.fromList biasList
    input   = S2D . H.fromList . concat $ inputList :: S ('D2 10 10)

    inputList :: [[Double]]
    inputList = [[-1.8798149824142456,  0.1028530076146126,  1.8676880598068237,
                  -0.0617060922086239, -0.8356814980506897,  0.6487482190132141,
                   0.8218213915824890, -0.7828793525695801, -0.8224498033523560,
                  -0.9689628481864929
                 ]
                ,[-0.1040988788008690,  1.4789071083068848,  1.6646575927734375,
                   0.0237357039004564, -0.5236989855766296,  0.6900013089179993,
                  -2.3320152759552002, -1.6244263648986816, -1.0726952552795410,
                  -0.4659616351127625
                 ]
                ,[ 0.0606177598237991,  1.2164361476898193, -1.0005422830581665,
                   2.0863819122314453, -1.5312120914459229,  0.4628386795520782,
                  -1.5035923719406128,  0.5512505769729614, -0.6526298522949219,
                   0.6975844502449036
                 ]
                ,[ 1.5345604419708252,  0.2354260832071304, -0.2829766273498535,
                  -1.1268494129180908,  0.1847444474697113, -0.6780525445938110,
                   0.9897040128707886,  0.1145756468176842,  0.5400218367576599,
                  -0.6138708591461182
                 ]
                ,[-1.0893152952194214, -0.0248561538755894,  0.0916035994887352,
                   0.4344462454319000, -2.2688574790954590,  0.5042927861213684,
                  -1.2440685033798218,  0.4743961393833160,  0.2804549634456635,
                   0.1743697375059128
                 ]
                ,[-0.2276446968317032, -1.5715813636779785, -0.2782900631427765,
                   0.2772432267665863,  0.5334178209304810, -0.3267174661159515,
                  -0.6893687248229980, -0.8983678221702576,  1.7771846055984497,
                   0.6515364050865173
                 ]
                ,[-0.8124530911445618,  1.0634243488311768,  0.0320023111999035,
                  -1.3274892568588257,  0.3162937462329865,  0.6602431535720825,
                   0.7445837259292603,  0.1550943553447723,  0.1773122400045395,
                   0.5073298215866089
                 ]
                ,[ 0.8331560492515564,  1.1417356729507446,  1.3021006584167480,
                  -1.2554157972335815, -0.4929245114326477,  0.7357274293899536,
                   0.4516215324401855,  0.9766013026237488,  0.4637960195541382,
                  -1.2788373231887817
                 ]
                ,[-0.1299438923597336,  0.7541506290435791, -0.6450557708740234,
                  -0.0040270495228469,  0.7661917805671692,  0.0933827608823776,
                   0.3463796675205231,  0.1497271358966827,  0.6318596005439758,
                  -1.9423550367355347
                 ]
                ,[ 0.3258689343929291,  0.5653873682022095, -0.1593302637338638,
                   0.5531405806541443, -0.4313830733299255,  0.9392206668853760,
                   1.1189296245574951,  0.9076719880104065, -0.3691771030426025,
                   2.3205711841583252
                 ]
                ]

    filtersList :: [[[Double]]]
    filtersList = [[[ 0.0762235820293427, -0.0693399608135223,  0.1232089996337891,
           -0.1839968860149384],
          [-0.2333435118198395,  0.0558746755123138,  0.1272304952144623,
            0.1712160110473633],
          [ 0.2303934693336487,  0.0637164115905762,  0.0874992907047272,
           -0.2228358089923859],
          [-0.2300853431224823, -0.1301925778388977,  0.1110948324203491,
           -0.1208976805210114]],


         [[-0.1482009291648865, -0.1966925859451294, -0.0440416038036346,
           -0.0799964368343353],
          [ 0.0987019836902618,  0.0791423320770264,  0.2103689610958099,
           -0.2410672008991241],
          [ 0.0028940439224243,  0.0728487372398376,  0.0047851204872131,
            0.0087434351444244],
          [ 0.2424267232418060, -0.1152470409870148,  0.2046474218368530,
           -0.1154336035251617]],


         [[-0.1728554666042328,  0.2191164791584015,  0.0494877994060516,
           -0.1877064704895020],
          [-0.0716654360294342,  0.1852594912052155,  0.1268731951713562,
            0.1372097134590149],
          [ 0.2338261902332306,  0.0943823754787445, -0.2169064879417419,
           -0.1956105828285217],
          [-0.0422836244106293,  0.1209872066974640,  0.1442286074161530,
           -0.2474469542503357]]]

    biasList :: [Double]
    biasList = [-0.1065079271793365,  0.1141500771045685, -0.0434862375259399]

    outputList :: [[[Double]]]
    outputList = [[[-0.4326016604900360, -0.5381838679313660, -0.8197864294052124, -0.3077610433101654],
                   [-1.4160603284835815, -0.8261992335319519, -1.2307931184768677, -0.6055138707160950],
                   [-0.1438199430704117, -0.8861438035964966, -0.8439695835113525,  0.2755392491817474],
                   [-0.4444667994976044, -0.7047327160835266,  0.4867877364158630, -0.4625016748905182]],
                  [[ 1.2657278776168823,  0.0472350381314754,  0.3799144029617310,  0.2348928004503250],
                   [ 0.1615301817655563,  0.0406027995049953,  0.5752753019332886,  0.8285622000694275],
                   [ 0.5149132013320923,  0.4453703761100769,  0.2957187891006470,  0.5147784948348999],
                   [ 0.8481521010398865, -0.2448751479387283, -0.3152585625648499,  0.2738023698329926]],
                  [[ 1.0434051752090454, -0.3550303280353546,  0.0058417855761945, -0.6423963904380798],
                   [-1.1366062164306641,  0.8248907923698425, -0.0979268252849579, -0.2169524729251862],
                   [ 0.5547238588333130, -0.8525719046592712, -0.1231328472495079,  0.9879407286643982],
                   [ 0.8017534613609314, -1.2922899723052979,  0.5693746805191040, -0.4196736514568329]]]
    
tests :: IO Bool
tests = checkParallel $$(discover)
